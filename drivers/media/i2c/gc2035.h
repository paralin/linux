/*
 * GC2035 sensor driver
 *
 * This program is free software; you can redistribute it and/or
 *modify it under the terms of the GNU General Public License as
 *published by the Free Software Foundation version 2.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 *kind, whether express or implied; without even the implied warranty
 *of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __GC2035_H__
#define __GC2035_H__

#define GC2035_REG_DELAY                (0xFFFE)
#define GC2035_REG_END                  (0xFFFF)

#define V4L2_CID_CAM_PREVIEW_ONOFF		(V4L2_CID_USER_BASE | 0x1002)
#define V4L2_CID_CAM_CAPTURE			(V4L2_CID_USER_BASE | 0x1006)
#define V4L2_CID_CAM_MOUNTING			(V4L2_CID_USER_BASE | 0x1008)

#define GC2035_REG_CHIP_ID_HIGH		0xf0
#define GC2035_REG_CHIP_ID_LOW		0xf1
#define GC2035_REG_PAD_AUTO_SWITCH_MODE	0xf2
#define GC2035_REG_DATA_PAD_IO_DVP	0xf3
#define GC2035_REG_DATA_PAD_IO_EBI	0xf4
#define GC2035_REG_DATA_PAD_IO_HIGH	0xf5
#define GC2035_REG_UP_DOWN_PWD_DN	0xf6
#define GC2035_REG_PLL_MODE1		0xf7
#define GC2035_REG_PLL_MODE2		0xf8
#define GC2035_REG_CM_MODE		0xf9
#define GC2035_REG_CLK_DIV_MODE		0xfa
#define GC2035_REG_I2C_DEVICE_ID	0xfb
#define GC2035_REG_ANALOG_PWC		0xfc
#define GC2035_REG_RESET		0xfe

/**
 *struct gc2035_reg - gc2035 register format
 *@reg: 16-bit offset to register
 *@val: 8/16/32-bit register value
 *@length: length of the register
 *
 * Define a structure for GC2035 register initialization values
 */
struct gc2035_reg {
	u16 reg;
	u8 val;
};

static struct gc2035_reg sensor_default_regs[] = {
	{GC2035_REG_RESET, 0xf0},	// soft reset
	{GC2035_REG_RESET, 0xf0},	// soft reset
	{GC2035_REG_RESET, 0xf0},	// soft reset
	{GC2035_REG_ANALOG_PWC, 0x06},	// vpix enable
	{GC2035_REG_UP_DOWN_PWD_DN, 0x00},	// 
	{GC2035_REG_PLL_MODE1, 0x1d},	// enable, 24Mhz, clock double
	{GC2035_REG_PLL_MODE2, 0x84},	// duvx4=4 pll dg div enable
	{GC2035_REG_CLK_DIV_MODE, 0x00},// 
	{GC2035_REG_CM_MODE, 0xfe},	// enable all clocks
	{GC2035_REG_PAD_AUTO_SWITCH_MODE, 0x00},
	/* //////////////////////////////////////////////////// */
	/* /////////////////// Analog & Cisctl //////////////// */
	/* //////////////////////////////////////////////////// */
	{GC2035_REG_RESET, 0x00},	// Register page 0
	{0x03, 0x04},
	{0x04, 0x00},
	{0x09, 0x00},
	{0x0a, 0x00},
	{0x0b, 0x00},
	{0x0c, 0x00},
	{0x0d, 0x04},
	{0x0e, 0xc0},
	{0x0f, 0x06},
	{0x10, 0x52},
	{0x12, 0x2e},
	{0x17, 0x14}, /* 14 */
	{0x18, 0x22},
	{0x19, 0x0f},
	{0x1a, 0x01},
	{0x1b, 0x4b},
	{0x1c, 0x07},
	{0x1d, 0x10},
	{0x1e, 0x88},
	{0x1f, 0x78},
	{0x20, 0x03},
	{0x21, 0x40},
	{0x22, 0xf0},
	{0x24, 0x16},
	{0x25, 0x01},
	{0x26, 0x10},
	{0x2d, 0x60},
	{0x30, 0x01},
	{0x31, 0x90},
	{0x33, 0x06},
	{0x34, 0x01},

	/* /////////////////////////////////////////////////// */
	/* /////////////////// ISP reg /////////////////////// */
	/* /////////////////////////////////////////////////// */
	{0x80, 0xff},
	{0x81, 0x24},
	{0x82, 0xfa},
	{0x83, 0x00},
	{0x84, 0x02},
	{0x86, 0x07},
	{0x88, 0x03},
	{0x89, 0x03},
	{0x85, 0x30},
	{0x8a, 0x00},
	{0x8b, 0x00},
	{0xb0, 0x55},
	{0xc3, 0x00},
	{0xc4, 0x80},
	{0xc5, 0x90},
	{0xc6, 0x38},
	{0xc7, 0x40},
	{0xec, 0x06},
	{0xed, 0x04},
	{0xee, 0x60},
	{0xef, 0x90},
	{0xb6, 0x01},
	{0x90, 0x01},
	{0x91, 0x00},
	{0x92, 0x00},
	{0x93, 0x00},
	{0x94, 0x00},
	{0x95, 0x04},
	{0x96, 0xb0},
	{0x97, 0x06},
	{0x98, 0x40},

	/* ///////////////////////////////////////////// */
	/* /////////////////// BLK ///////////////////// */
	/* ///////////////////////////////////////////// */
	{0x18, 0x02},
	{0x40, 0x42},
	{0x41, 0x00},
	{0x43, 0x54},
	{0x5e, 0x00},
	{0x5f, 0x00},
	{0x60, 0x00},
	{0x61, 0x00},
	{0x62, 0x00},
	{0x63, 0x00},
	{0x64, 0x00},
	{0x65, 0x00},
	{0x66, 0x20},
	{0x67, 0x20},
	{0x68, 0x20},
	{0x69, 0x20},
	{0x76, 0x00},
	{0x6a, 0x02},
	{0x6b, 0x02},
	{0x6c, 0x02},
	{0x6d, 0x02},
	{0x6e, 0x02},
	{0x6f, 0x02},
	{0x70, 0x02},
	{0x71, 0x02},
	{0x76, 0x00},
	{0x72, 0xf0},
	{0x7e, 0x3c},
	{0x7f, 0x00},
	{0xfe, 0x02},
	{0x48, 0x15},
	{0x49, 0x00},
	{0x4b, 0x0b},
	{0xfe, 0x00},

	/* ///////////////////////////////////////////// */
	/* /////////////////// AEC ///////////////////// */
	/* ///////////////////////////////////////////// */
	{0xfe, 0x01},
	{0x01, 0x04},
	{0x02, 0xc0},
	{0x03, 0x04},
	{0x04, 0x90},
	{0x05, 0x30},
	{0x06, 0x90},
	{0x07, 0x20},
	{0x08, 0x70},
	{0x09, 0x00},
	{0x0a, 0xc2},
	{0x0b, 0x11},
	{0x0c, 0x10},
	{0x13, 0x30}, /* 0x40 */
	{0x17, 0x00},
	{0x1c, 0x11},
	{0x1e, 0x61},
	{0x1f, 0x30},
	{0x20, 0x40},
	{0x22, 0x80},
	{0x23, 0x20},
	{0xfe, 0x02},
	{0x0f, 0x04},
	{0xfe, 0x01},
	{0x12, 0x00},
	{0x15, 0x50},
	{0x10, 0x31},
	{0x3e, 0x28},
	{0x3f, 0xe0},
	{0x40, 0xe0},
	{0x41, 0x0f},

	/* /////////////////////////// */
	/* ////// INTPEE ///////////// */
	/* /////////////////////////// */
	{0xfe, 0x02},
	{0x90, 0x6c},
	{0x91, 0x03},
	{0x92, 0xc8},
	{0x94, 0x66},
	{0x95, 0xb5},
	{0x97, 0x64},
	{0xa2, 0x11},
	{0xfe, 0x00},

	/* /////////////////////////// */
	/* /////////// DNDD ////////// */
	/* /////////////////////////// */
	{0xfe, 0x02},
	{0x80, 0xc1},
	{0x81, 0x08},
	{0x82, 0x08},
	{0x83, 0x05},
	{0x84, 0x0a},
	{0x86, 0x50},
	{0x87, 0x30},
	{0x88, 0x15},
	{0x89, 0x80},
	{0x8a, 0x60},
	{0x8b, 0x30},

	/* /////////////////////////////////////////////// */
	/* //////////////////// ASDE ///////////////////// */
	/* /////////////////////////////////////////////// */
	{0xfe, 0x01},
	{0x21, 0x14},
	{0xfe, 0x02},
	{0xa3, 0x40},
	{0xa4, 0x20},
	{0xa5, 0x40},
	{0xa6, 0x80},
	{0xab, 0x40},
	{0xae, 0x0c},
	{0xb3, 0x34},
	{0xb4, 0x44},
	{0xb6, 0x38},
	{0xb7, 0x02},
	{0xb9, 0x30},
	{0x3c, 0x08},
	{0x3d, 0x30},
	{0x4b, 0x0d},
	{0x4c, 0x20},
	{0xfe, 0x00},

	/* //////////////////// gamma1 /////////////////// */
	/* //////////////////// Gamma //////////////////// */
	/* /////////////////////////////////////////////// */
	{0xfe, 0x02},
	{0x10, 0x10},
	{0x11, 0x15},
	{0x12, 0x1a},
	{0x13, 0x1f},
	{0x14, 0x2c},
	{0x15, 0x39},
	{0x16, 0x45},
	{0x17, 0x54},
	{0x18, 0x69},
	{0x19, 0x7d},
	{0x1a, 0x8f},
	{0x1b, 0x9d},
	{0x1c, 0xa9},
	{0x1d, 0xbd},
	{0x1e, 0xcd},
	{0x1f, 0xd9},
	{0x20, 0xe3},
	{0x21, 0xea},
	{0x22, 0xef},
	{0x23, 0xf5},
	{0x24, 0xf9},
	{0x25, 0xff},
	/* /////////// auto gamma /////////// */
	{0xfe, 0x02},
	{0x26, 0x0f},
	{0x27, 0x14},
	{0x28, 0x19},
	{0x29, 0x1e},
	{0x2a, 0x27},
	{0x2b, 0x33},
	{0x2c, 0x3b},
	{0x2d, 0x45},
	{0x2e, 0x59},
	{0x2f, 0x69},
	{0x30, 0x7c},
	{0x31, 0x89},
	{0x32, 0x98},
	{0x33, 0xae},
	{0x34, 0xc0},
	{0x35, 0xcf},
	{0x36, 0xda},
	{0x37, 0xe2},
	{0x38, 0xe9},
	{0x39, 0xf3},
	{0x3a, 0xf9},
	{0x3b, 0xff},

	/* ///////////////////////////////////////////// */
	/* //////////////////// YCP //////////////////// */
	/* ///////////////////////////////////////////// */
	{0xfe, 0x02},
	{0xd1, 0x30},
	{0xd2, 0x30},
	{0xd3, 0x45},
	{0xdd, 0x14},
	{0xde, 0x86},
	{0xed, 0x01},
	{0xee, 0x28},
	{0xef, 0x30},
	{0xd8, 0xd8},

	/* ////////////////////////////// */
	/* //////////// LSC 0.8////////// */
	/* ////////////////////////////// */
	{0xfe, 0x01},
	{0xc2, 0x1a},
	{0xc3, 0x0b},
	{0xc4, 0x0e},
	{0xc8, 0x20},
	{0xc9, 0x0c},
	{0xca, 0x12},
	{0xbc, 0x41},
	{0xbd, 0x1f},
	{0xbe, 0x29},
	{0xb6, 0x48},
	{0xb7, 0x22},
	{0xb8, 0x28},
	{0xc5, 0x04},
	{0xc6, 0x00},
	{0xc7, 0x00},
	{0xcb, 0x12},
	{0xcc, 0x00},
	{0xcd, 0x08},
	{0xbf, 0x14},
	{0xc0, 0x00},
	{0xc1, 0x10},
	{0xb9, 0x0f},
	{0xba, 0x00},
	{0xbb, 0x00},
	{0xaa, 0x0a},
	{0xab, 0x00},
	{0xac, 0x00},
	{0xad, 0x09},
	{0xae, 0x00},
	{0xaf, 0x02},
	{0xb0, 0x04},
	{0xb1, 0x00},
	{0xb2, 0x00},
	{0xb3, 0x03},
	{0xb4, 0x00},
	{0xb5, 0x02},
	{0xd0, 0x42},
	{0xd1, 0x00},
	{0xd2, 0x00},
	{0xd6, 0x47},
	{0xd7, 0x07},
	{0xd8, 0x00},
	{0xd9, 0x34},
	{0xda, 0x13},
	{0xdb, 0x00},
	{0xd3, 0x2b},
	{0xd4, 0x18},
	{0xd5, 0x10},
	{0xa4, 0x00},
	{0xa5, 0x00},
	{0xa6, 0x77},
	{0xa7, 0x77},
	{0xa8, 0x77},
	{0xa9, 0x77},
	{0xa1, 0x80},
	{0xa2, 0x80},

	{0xfe, 0x01},
	{0xdf, 0x00},
	{0xdc, 0x80},
	{0xdd, 0x30},
	{0xe0, 0x6b},
	{0xe1, 0x70},
	{0xe2, 0x6b},
	{0xe3, 0x70},
	{0xe6, 0xa0},
	{0xe7, 0x60},
	{0xe8, 0xa0},
	{0xe9, 0x60},
	{0xfe, 0x00},

	/* /////////////////////////////////////////////// */
	/* ///////////////////// AWB ///////////////////// */
	/* /////////////////////////////////////////////// */
#if 1 /* /pheobe_cao */
	{0xfe, 0x01},
	{0x4f, 0x00},
	{0x4f, 0x00},
	{0x4b, 0x01},
	{0x4f, 0x00},
	{0x4c, 0x01}, /* D75 */
	{0x4d, 0x71},
	{0x4e, 0x01},
	{0x4c, 0x01},
	{0x4d, 0x91},
	{0x4e, 0x01},
	{0x4c, 0x01},
	{0x4d, 0x70},
	{0x4e, 0x01},
	{0x4c, 0x01}, /* D65 */
	{0x4d, 0x90},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xb0},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0x8f},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0x6f},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xaf},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xd0},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xf0},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xcf},
	{0x4e, 0x02},
	{0x4c, 0x01},
	{0x4d, 0xef},
	{0x4e, 0x02},
	{0x4c, 0x01}, /* D50 */
	{0x4d, 0x6e},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x8e},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xae},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xce},
	{0x4e, 0x03},
	/* {0x4c , 0x01}, */
	/* {0x4d , 0xcf}, */
	/* {0x4e , 0x03}, */
	{0x4c, 0x01},
	{0x4d, 0xee},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x6d},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x8d},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xad},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xcd},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xed},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x6c},
	{0x4e, 0x03},
	/* {0x4c , 0x01}, */
	/* {0x4d , 0xed}, */
	/* {0x4e , 0x03},//skin */
	{0x4c, 0x01},
	{0x4d, 0x8c},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xac},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xcc},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0xec},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x6b},
	{0x4e, 0x03},
	{0x4c, 0x01},
	{0x4d, 0x8b},
	{0x4e, 0x03}, /* skin */
	/* {0x4c , 0x01}, */
	/* {0x4d , 0xab}, */
	/* {0x4e , 0x03}, */
	/* {0x4c , 0x01}, */
	/* {0x4d , 0xcb}, */
	/* {0x4e , 0x03}, */
	/* {0x4c , 0x01}, */
	/* {0x4d , 0xeb}, */
	/* {0x4e , 0x03}, */
	{0x4c, 0x01},
	{0x4d, 0x8a},
	{0x4e, 0x03},

	/* {0x4c , 0x02}, */
	/* {0x4d , 0x2b}, */
	/* {0x4e , 0x03}, */
	/* {0x4c , 0x02}, */
	/* {0x4d , 0x4b}, */
	/* {0x4e , 0x03}, */

	{0x4c, 0x01}, /* CWF */
	{0x4d, 0xaa},
	{0x4e, 0x04},
	{0x4c, 0x01}, /* CWF */
	{0x4d, 0xab},
	{0x4e, 0x04},
	{0x4c, 0x01}, /* CWF */
	{0x4d, 0xcb},
	{0x4e, 0x04},
	{0x4c, 0x01}, /* CWF */
	{0x4d, 0xa9},
	{0x4e, 0x04},
	{0x4c, 0x01},
	{0x4d, 0xca},
	{0x4e, 0x04},
	{0x4c, 0x01},
	{0x4d, 0xc9},
	{0x4e, 0x04},
	{0x4c, 0x01},
	{0x4d, 0x8a},
	{0x4e, 0x04},
	{0x4c, 0x01},
	{0x4d, 0x89},
	{0x4e, 0x04},
	{0x4c, 0x01}, /* TL84 */
	{0x4d, 0xeb},
	{0x4e, 0x05},
	{0x4c, 0x02},
	{0x4d, 0x0b},
	{0x4e, 0x05},
	{0x4c, 0x02},
	{0x4d, 0x0c},
	{0x4e, 0x05},
	{0x4c, 0x02},
	{0x4d, 0x2c},
	{0x4e, 0x05},
	{0x4c, 0x02},
	{0x4d, 0x2b},
	{0x4e, 0x05},
	{0x4c, 0x01},
	{0x4d, 0xea},
	{0x4e, 0x05},
	{0x4c, 0x02},
	{0x4d, 0x0a},
	{0x4e, 0x05},

	{0x4c, 0x02},
	{0x4d, 0x8b},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x2a},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x4a},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x6a},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x8a},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0xaa},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x09},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x29},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x49},
	{0x4e, 0x06},
	{0x4c, 0x02},
	{0x4d, 0x69},
	{0x4e, 0x06},
	{0x4c, 0x02}, /* H */
	{0x4d, 0xcc},
	{0x4e, 0x07},
	{0x4c, 0x02},
	{0x4d, 0xca},
	{0x4e, 0x07},
	{0x4c, 0x02},
	{0x4d, 0xa9},
	{0x4e, 0x07},
	{0x4c, 0x02},
	{0x4d, 0xc9},
	{0x4e, 0x07},
	{0x4c, 0x02},
	{0x4d, 0xe9},
	{0x4e, 0x07},

	{0x4f, 0x01},
	{0x50, 0x80},
	{0x51, 0xa8},
	{0x52, 0x47},
	{0x53, 0x38},
	{0x54, 0xc7},
	{0x56, 0x0e},
	{0x58, 0x08},
	{0x5b, 0x00},
	{0x5c, 0x74},
	{0x5d, 0x8b},
	{0x61, 0xdb},
	{0x62, 0xb8},
	{0x63, 0x86},
	{0x64, 0xc0},
	{0x65, 0x04},

	{0x67, 0xa8},
	{0x68, 0xb0},
	{0x69, 0x00},
	{0x6a, 0xa8},
	{0x6b, 0xb0},
	{0x6c, 0xaf},
	{0x6d, 0x8b},
	{0x6e, 0x50},
	{0x6f, 0x18},
	{0x73, 0xe0},
	{0x70, 0x0d},
	{0x71, 0x68},
	{0x72, 0x81},
	{0x74, 0x01},
	{0x75, 0x01},
	{0x7f, 0x0c},
	{0x76, 0x70},
	{0x77, 0x58},
	{0x78, 0xa0},
	{0x79, 0x5e},
	{0x7a, 0x54},
	{0x7b, 0x55},
	{0xfe, 0x00},
#endif

	/* //////////////////////////////////////// */
	/* /////////////////// CC ///////////////// */
	/* //////////////////////////////////////// */
	{0xfe, 0x02},
	{0xc0, 0x01},
	{0xC1, 0x44},
	{0xc2, 0xF4},
	{0xc3, 0x02},
	{0xc4, 0xf2},
	{0xc5, 0x44},
	{0xc6, 0xf8},
	{0xC7, 0x50},
	{0xc8, 0xf2},
	{0xc9, 0x00},
	{0xcA, 0xE0},
	{0xcB, 0x45},
	{0xcC, 0xec},
	{0xCd, 0x45},
	{0xce, 0xf0},
	{0xcf, 0x00},
	{0xe3, 0xf0},
	{0xe4, 0x45},
	{0xe5, 0xe8},

	/* ////////////frame rate   50Hz */
	{0xfe, 0x00},
	{0x05, 0x01},
	{0x06, 0x56},
	{0x07, 0x00},
	{0x08, 0x32},
	{0xfe, 0x01},
	{0x25, 0x00},
	{0x26, 0xfa},
	{0x27, 0x04},
	{0x28, 0xe2},
	{0x29, 0x05},
	{0x2a, 0xdc},
	{0x2b, 0x06},
	{0x2c, 0xd6},
	{0x2d, 0x0b},
	{0x2e, 0xb8},
	{0xfe, 0x00},

	/* /////////SVGA SETTING///////// */
	{0xfe, 0x00},
	{0xfa, 0x00},
	{0xfd, 0x01},
	/* // crop window */
	{0xfe, 0x00},
	{0x99, 0x11},
	{0x9a, 0x06},
	{0x9b, 0x00},
	{0x9c, 0x00},
	{0x9d, 0x00},
	{0x9e, 0x00},
	{0x9f, 0x00},
	{0xa0, 0x00},
	{0xa1, 0x00},
	{0xa2, 0x00},
	{0x90, 0x01},
	{0x91, 0x00},
	{0x92, 0x00},
	{0x93, 0x00},
	{0x94, 0x00},
	{0x95, 0x02},
	{0x96, 0x58},
	{0x97, 0x03},
	{0x98, 0x20},

	/* //////////////////// AWB /////////////////// */
	{0xfe, 0x00},
	{0xec, 0x01},
	{0xed, 0x02},
	{0xee, 0x30},
	{0xef, 0x48},
	{0xfe, 0x01},
	{0x74, 0x00},
	/* // AEC */
	{0xfe, 0x01},
	{0x01, 0x04},
	{0x02, 0x60},
	{0x03, 0x02},
	{0x04, 0x48},
	{0x05, 0x18},
	{0x06, 0x4c},
	{0x07, 0x14},
	{0x08, 0x36},
	{0x0a, 0xc0},
	{0x21, 0x14},
	{0xfe, 0x00},
	/* ///////////////////// output /////////////////// */
	{0xfe, 0x00},
	{0xf2, 0x0f},

	/* /////////////////////dark sun////////////////// */
	{0x18, 0x22},
	{0xfe, 0x02},
	{0x40, 0xbf},
	{0x46, 0xcf},
	{0xfe, 0x00},
	{GC2035_REG_END, 0x00}
};


static const struct gc2035_reg gc2035_mode[][64] = {
	/* VGA */
	{
		{0xfe, 0x00},
		{0xfa, 0x00},
		{0xfd, 0x01},
		{0xb6, 0x01},
		/* ////////////// crop window //////////// */
		{0xfe, 0x00},
		{0x99, 0x11},
		{0x9a, 0x06},
		{0x9b, 0x00},
		{0x9c, 0x00},
		{0x9d, 0x00},
		{0x9e, 0x00},
		{0x9f, 0x00},
		{0xa0, 0x00},
		{0xa1, 0x00},
		{0xa2, 0x00},
		{0x90, 0x01},
		{0x91, 0x00},
		{0x92, 0x00},
		{0x93, 0x00},
		{0x94, 0x00},
		{0x95, 0x02},
		{0x96, 0x58},
		{0x97, 0x03},
		{0x98, 0x20},

		/* //////////////// AWB ///////////////// */
		{0xfe, 0x00},
		{0xec, 0x01},
		{0xed, 0x02},
		{0xee, 0x30},
		{0xef, 0x48},
		{0xfe, 0x01},
		{0x74, 0x00},
		/* // AEC */
		{0xfe, 0x01},
		{0x01, 0x04},
		{0x02, 0x60},
		{0x03, 0x02},
		{0x04, 0x48},
		{0x05, 0x18},
		{0x06, 0x4c},
		{0x07, 0x14},
		{0x08, 0x36},
		{0x0a, 0xc0},
		{0x21, 0x14},
		{0xfe, 0x00},

		{GC2035_REG_END, 0x00}
	},
	/* UXGA */
	{
		{0xfe, 0x00},
		{0xb6, 0x00},
		{0xfa, 0x11},
		{0xfd, 0x00},
		/* // crop window */
		{0xfe, 0x00},
		{0xb6, 0x00},
		{0x99, 0x11},
		{0x9a, 0x06},
		{0x9b, 0x00},
		{0x9c, 0x00},
		{0x9d, 0x00},
		{0x9e, 0x00},
		{0x9f, 0x00},
		{0xa0, 0x00},
		{0xa1, 0x00},
		{0xa2, 0x00},
		{0x90, 0x01},
		{0x91, 0x00},
		{0x92, 0x00},
		{0x93, 0x00},
		{0x94, 0x00},
		{0x95, 0x04},
		{0x96, 0xb0},
		{0x97, 0x06},
		{0x98, 0x40},

		/* ///////////////// AWB /////////////////// */
		{0xfe, 0x00},
		{0xec, 0x02},
		{0xed, 0x04},
		{0xee, 0x60},
		{0xef, 0x90},
		{0xfe, 0x01},
		{0x74, 0x01},
		/* //////////////// AEC /////////////////// */
		{0xfe, 0x01},
		{0x01, 0x08},
		{0x02, 0xc0},
		{0x03, 0x04},
		{0x04, 0x90},
		{0x05, 0x30},
		{0x06, 0x98},
		{0x07, 0x28},
		{0x08, 0x6c},
		{0x0a, 0xc2},
		{0x21, 0x15}, /*if 0xfa=11,then 0x21=15;else if 0xfa=00,then 0x21=14 */
		{0xfe, 0x00},

		{GC2035_REG_END, 0x00}
	},
};

static const struct gc2035_reg gc2035_streamon[] = {
	{0xfe, 0x03}, /* switch to P3 */
	{0x10, 0x94},
	{0xfe, 0x00}, /* switch to P0 */
	{GC2035_REG_END, 0x00}
};

static const struct gc2035_reg gc2035_streamoff[] = {
	{0xfe, 0x03}, /* switch to P3 */
	{0x10, 0x00},
	{0xfe, 0x00}, /* switch to P0 */
	{GC2035_REG_END, 0x00}
};

static const struct gc2035_reg gc2035_power_down[] = {
	/* System Control */

	{GC2035_REG_END, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*EFFECT */
static const struct gc2035_reg gc2035_effect_normal_tbl[] = {
	{0xfe, 0x00}, /* switch to P0 */
	{0x83, 0xe0}, /* disable effects */
	{GC2035_REG_END, 0x00}
};

static const struct gc2035_reg gc2035_effect_bw_tbl[] = {
	{0xfe, 0x00}, /* switch to P0 */
	{0x83, 0x12}, /* enable "00 gray" effect */
	{GC2035_REG_END, 0x00}
};

static const struct gc2035_reg gc2035_effect_sepia_tbl[] = {
	{0xfe, 0x00}, /* switch to P0 */
	{0x83, 0x82}, /* enable "ancients" effect */
	{GC2035_REG_END, 0x00}
};

static const struct gc2035_reg gc2035_effect_negative_tbl[] = {
	{0xfe, 0x00}, /* switch to P0 */
	{0x83, 0x01}, /* enable inverse color */
	{GC2035_REG_END, 0x00}
};

#endif /* __GC2035_H__ */
